#!make

# https://velog.io/@480/Makefile-%EC%9D%84-%ED%94%84%EB%A1%9C%EC%A0%9D%ED%8A%B8-Runner-%EB%A1%9C-%EC%93%B0%EA%B8%B0

.PHONY: default
help:
	@echo " Spring boot jpa test program"

vscode-spring-boot:
	plugin | Spring boot dashboard 

vscode-maven:	
	explore | maven 

vscode-makefile-runner:
# not work.

	https://marketplace.visualstudio.com/items?itemName=rajivshah01234.make-runner

		Makefile Runner
		Allows us to run/copy make targets directly from vscode terminal.

		Setup Options(Optional)
		To export environment variables while running targets. Open settings.json and add configs

		"make-runner.env": {
			"development": {
				"AWS_PROFILE": "development",
				"RAILS_ENV": "development",
				"ROLE": "admin",
				"ENABLE_MFA": false
			},
			"staging": {
				"AWS_PROFILE": "staging",
				"RAILS_ENV": "staging",
				"ROLE": "user",
				"ENABLE_MFA": true
			},
			"none": {}
		}
		Note: This is optional step to export environment variables while running the targets.

		Usage
		Open any Makefile
		Put the cursor on any target
		1. Run the target in the vscode terminal
		Use key bindings cmd+shift+enter for Mac or ctrl+shift+enter for PC to run the target.
		Note: This will execute the commands in the active terminal of vscode. If your current terminal is busy, create a new terminal before executing the target.

		2. Copy the command
		Use key bindings cmd+shift+c for Mac or ctrl+shift+c for PC to copy the target command. Now you can paste the command in the terminal of your choice.

ttt: 
	echo "aaa"  | grep "a"

export URL=http://localhost:8080

reference-site:
	https://youtu.be/WnYPdkNSLy8?si=GWxbf8Tm6Zy3bQ4K

# org
	https://github.com/namoosori/spring5-for-beginner

# spring + alpha
	https://github.com/soomst/namoosori-spring5
	https://github.com/JeFeel/namoosori-practice
	https://github.com/BBeedroid/nextree
	https://github.com/syhwang125/springfw
	https://github.com/soomst/namoosori-spring5

# jpa
	https://github.com/dkdiek/JPA_Class_Practice
	https://github.com/kyh012412/jpa_study_namoosori

# local
	C:\nobackup\jonpark-java\namoosori-spring5
		https://github.com/soomst/namoosori-spring5

reference-react:
	https://github.com/leejjo2/namoosoriClone
	https://github.com/roeuihyun/namoosori-react
	https://github.com/cube9007/JS-Namoosori

java-static:
	static method 는 static variable 만을 이용해야 한다.

	https://mangkyu.tistory.com/47

		일반적으로 우리가 만든 Class는 Static 영역에 생성되고, new 연산을 통해 생성한 객체는 Heap영역에 생성됩니다. 객체의 생성시에 할당된 Heap영역의 메모리는 Garbage Collector를 통해 수시로 관리를 받습니다. 하지만 Static 키워드를 통해 Static 영역에 할당된 메모리는 모든 객체가 공유하는 메모리라는 장점을 지니지만, Garbage Collector의 관리 영역 밖에 존재하므로 Static을 자주 사용하면 프로그램의 종료시까지 메모리가 할당된 채로 존재하므로 자주 사용하게 되면 시스템의 퍼포먼스에 악영향을 주게 됩니다.
		[ Static 변수 특징 ]Static 변수는 클래스 변수이다.객체를 생성하지 않고도 Static 자원에 접근이 가능하다..Static 변수와 static 메소드는 Static 메모리 영역에 존재하므로 객체가 생성되기 이전에 이미 할당이 되어 있습니다. 그렇기 때문에 객체의 생성없이 바로 접근(사용)할 수 있습니다.
		출처: https://mangkyu.tistory.com/47 [MangKyu's Diary:티스토리]

intellj-delete-empty-lines:
	First if pressed [ctrl]+[shift]+J to remove lines and created a single line code.
	Then I pressed [ctrl]+[alt]+L to reindent all the code

	How to remove blank lines in IntelliJ?
	phpstorm - How to remove unnecessary blank line on code ...
	File >> Setting >> Editor >> Code style java >>Blank lines tab.
	You should change to 0 in code label(as picture), It would remove all unnecessary blank line when press format shortcut: ctrl + alt + L.


intellij-makefile-in-windows:
# 화면에 보이게 하기
	File | Settings | Build, Execution, Deployment | Make | Path to Make executable
	View | Tool Window | Make

###
	https://medium.com/@samsorrahman/how-to-run-a-makefile-in-windows-b4d115d7c516
## silent mode
	https://stackoverflow.com/questions/9967105/suppress-echo-of-command-invocation-in-makefile
		make -s p-env

## change make bin -> c:/nobackup/dev_tool/w64devkit/bin/make
	https://stackoverflow.com/questions/36403285/using-intellij-idea-for-project-using-makefiles
		For Windows users
			So far, the guidance provided by Dannil Maslov ( see intelliJ IDEA thread here ) worked for me.
			Install GnuWin32 (Make for Windows).
			Install the IDEA Makefile plugin.
			Go to settings and specify the path to make executable under: File | Settings | Build, Execution, Deployment | Make | Path to Make executable (by default: C:\Program Files (x86)\GnuWin32\bin\make.exe). Check "Use Cygwin" if necessary.

springboot-sbb3:
# 점프 투 스프링부트3 책의 소스코드 / H2 database
	C:\nobackup\jonpark-java\sbb3
	
	https://github.com/pahkey/sbb3

	점프 투 스프링부트3 책의 소스코드
	위키독스 : https://wikidocs.net/book/7601
	"점프 투 스프링부트"는 "Spring Boot Board(SBB)"라는 이름의 게시판 서비스를 만들어가는 과정을 설명한 스프링부트 입문서이다. 자바 설치부터 시작하여 서비스 운영까지 웹 프로그래밍의 처음부터 끝까지 모든 것을 알 수 있도록 구성하였다.

	이 책을 따라하다 보면 다음과 같은 웹 사이트가 만들어진다. (최종 결과물)

	http://sbb.pybo.kr
	책을 따라하다 생기는 질문은 위키독스의 댓글 또는 필자가 운영하는 디스코드를 활용하도록 하자.

	질문과 답변 서비스 "디스코드" - https://discord.gg/ZwqRRYRYkR


spring--jpa-namoosori-database-postgresql:
# https://cbwstar.tistory.com/entry/persistencexml
# https://gist.github.com/SergioDiniz/886723272d9fd95dd17ecb79b35b66e1
	c:\nobackup\dev_tool\PostgreSQL\14\bin\pg_ctl.exe -D c:\nobackup\dev_tool\PostgreSQL\14\data -l logfile start

# https://coding-babo.tistory.com/85

	Postgresql maven
	<!-- https://mvnrepository.com/artifact/org.postgresql/postgresql -->
	<dependency>
			<groupId>org.postgresql</groupId>
			<artifactId>postgresql</artifactId>
			<version>42.3.3</version>
	</dependency>

### issue
	WARNING: JDBC URL contains too many / characters: jdbc:postgresql://localhost:5434/~/test
# src/main/resources/META-INF/persistence.xml
	<property name="javax.persistence.jdbc.url" value="jdbc:postgresql://localhost:5434/~/test"/>

# fix - remove ~/
	<property name="javax.persistence.jdbc.url" value="jdbc:postgresql://localhost:5434/test"/>

### change name from test to test-jpa
### issue
	Caused by: org.postgresql.util.PSQLException: FATAL: database "test-jpa" does not exist
# fix
	create test-jpa from pgAdmin4




spring--jpa-namoosori-database-h2:
# H2 database 시작
	C:\Program Files (x86)\H2\bin\h2w.bat

	@start javaw -cp "h2-2.2.224.jar;%H2DRIVERS%;%CLASSPATH%" org.h2.tools.Console %*
	@if errorlevel 1 pause


	http://10.129.67.36:8082/login.jsp?jsessionid=448f572174286e890ef3f40ca31a2bf4

#
	src/main/resources/META-INF/persistence.xml
			<persistence-unit name="customer-exam">
					<properties>
							<!-- H2 DB            -->
							<property name="javax.persistence.jdbc.driver" value="org.h2.Driver"/>
							<property name="javax.persistence.jdbc.user" value="sa"/>
							<property name="javax.persistence.jdbc.password" value=""/>
							<property name="javax.persistence.jdbc.url" value="jdbc:h2:tcp://localhost/~/test"/>
							<property name="hibernate.dialect" value="org.hibernate.dialect.H2Dialect"/>
							<!--스키마 자동 생성에 대한 옵션-->
							<property name="hibernate.hbm2ddl.auto" value="create"/>
	<!--            <property name="hibernate.hbm2ddl.auto" value="update"/>-->

							<!-- Option           -->
							<property name="hibernate.show_sql" value="true"/>
							<property name="hibernate.format_sql" value="true"/>
							<property name="hibernate.use_sql_comments" value="true"/>
					</properties>
			</persistence-unit>

h2-database-01-basic:
	https://www.baeldung.com/spring-boot-h2-database

h2-database-02-connection:
### issue
	2024-06-26 11:32:00.808  INFO 54512 --- [           main] com.zaxxer.hikari.HikariDataSource       : HikariPool-1 - Starting...
	2024-06-26 11:32:01.210  INFO 54512 --- [           main] com.zaxxer.hikari.HikariDataSource       : HikariPool-1 - Start completed.
	2024-06-26 11:32:01.225  INFO 54512 --- [           main] o.s.b.a.h2.H2ConsoleAutoConfiguration    : H2 console available at '/h2-console'. Database available at 'jdbc:h2:mem:0ecdf4ba-a533-4855-8e4e-737d5d0f54fb'


	http://localhost:8080/h2-console

	## embedded - use this
	 Generic H2 (Embedded)
	 jdbc:h2:mem:test - from lecture
	 jdbc:h2:~/test - from default value

	## server
	 Generic H2 (Server)
	 jdbc:h2:tcp://localhost/~/test

	## issue - url name has uuid

	2024-06-26 11:37:46.072  INFO 35028 --- [           main] com.zaxxer.hikari.HikariDataSource       : HikariPool-1 - Starting...
	2024-06-26 11:37:46.214  INFO 35028 --- [           main] com.zaxxer.hikari.HikariDataSource       : HikariPool-1 - Start completed.
	2024-06-26 11:37:46.222  INFO 35028 --- [           main] o.s.b.a.h2.H2ConsoleAutoConfiguration    : H2 console available at '/h2-console'. Database available at 'jdbc:h2:mem:6e492786-2756-4179-810a-890a0e90fbe1'

	## fix
	  https://www.youtube.com/watch?v=dlNu7rB7emQ
	  JDBC URL "jdbc:h2:mem:testdb" not found in H2 database-console
	  you have these error

	  Database "mem:testdb" not found, either pre-create it or allow remote database creation (not recommended in secure environments) [90149-200] 90149/90149 (Help)

	  in earlier version of spring before 2.3.0 ,

	  JDBC URL will be  jdbc:h2:mem:testdb was created by default

	  From version 2.3.0 onwards , if JDBC URL is not mentioned , it will  Auto generated database name can be found in the spring logs

### fix
	use application.properties

#
	#https://www.baeldung.com/spring-boot-h2-database

	server.port=8080
	spring.datasource.url=jdbc:h2:mem:test
	#spring.datasource.url=jdbc:h2:file:~/test
	spring.datasource.driverClassName=org.h2.Driver
	spring.datasource.username=sa
	#spring.datasource.password=password
	spring.datasource.password=
	spring.jpa.database-platform=org.hibernate.dialect.H2Dialect

	spring.h2.console.enabled=true
	spring.h2.console.path=/h2-console
	spring.jpa.show-sql=true
	spring.jpa.properties.hibernate.format_sql=true


# log
	2024-06-26 12:07:22.893  INFO 10628 --- [           main] com.zaxxer.hikari.HikariDataSource       : HikariPool-1 - Starting...
	2024-06-26 12:07:23.036  INFO 10628 --- [           main] com.zaxxer.hikari.HikariDataSource       : HikariPool-1 - Start completed.
	2024-06-26 12:07:23.044  INFO 10628 --- [           main] o.s.b.a.h2.H2ConsoleAutoConfiguration    : H2 console available at '/h2-console'. Database available at 'jdbc:h2:mem:test'


h2-database-03-:
h2-database-04-:
h2-database-05-:


postgre-start:
	ls c:\nobackup\dev_tool\PostgreSQL\14\
	c:\nobackup\dev_tool\PostgreSQL\14\bin\pg_ctl.exe -D c:\nobackup\dev_tool\PostgreSQL\14\data -l logfile start

h2-start:


api-post-in-browser:
	https://host4geeks.com/blog/breaking-it-down-a-beginners-guide-on-how-to-test-http-post-from-your-browser/
	https://stackoverflow.com/questions/4797534/how-to-manually-send-http-post-requests-from-firefox-or-chrome-browser


#.SILENT: check-make
check-make:
	which make
	@echo "--------"
	whereis make
	@echo "--------"
	where make
	@echo "--------"
	make --version
	@printf "..."

# make p-URL
p-%: ; @echo $*=$($*)

print-env:
	echo "${URL}"

api-examples:
	echo "${URL}"

api-club-all-get:
	curl -X GET ${URL}/club/all -H 'accept: application/json' | jq '.'
	#http GET  ${URL}/all

export CLUB_ID=9e692405-d974-48da-9642-c83e7abf279e
api-club-id-get:
	curl -X GET ${URL}/club/${CLUB_ID} -H 'accept: application/json' | jq '.'

api-club-id-put:
	curl -X PUT ${URL}/club/${CLUB_ID} -H 'accept: */*'  -H 'Content-Type: application/json'  -d '{"nameValues":[{"name":"name","value":"TravelClub-1"}, {"name":"intro","value":"Test TravelClub-1"}]}'

api-club-id-delete:
	curl -X DELETE ${URL}/club/${CLUB_ID} -H 'accept: */*'

export CLUB_NAME=TravelClub
#export CLUB_NAME=TravelClub-1
api-club-name-get:
	curl -X GET ${URL}/club?name=${CLUB_NAME} -H 'accept: application/json'  |  jq '.'
#	curl -X GET ${URL}/club?name=TravelClub -H 'accept: application/json'  |  jq '.[].id'
#	curl -X GET ${URL}/club?name=TravelClub -H 'accept: application/json' |  jq '.'
#	curl -X GET ${URL}/club?name=TravelClub -H 'accept: application/json'  | C:/nobackup/dev_tool/Anaconda3/Library/mingw-w64/bin/jq.exe '.'

# /club 에서 get mapping 되어 있는 것이 없다.
api-club-get:
	curl -X GET ${URL}/club -H 'accept: */*' | jq '.'
#	curl -X GET ${URL}/club -H 'accept: application/json'  | jq '.'
#	curl -v -X GET ${URL}/club -H 'accept: application/json'
#	curl -v -X GET "${URL}/club" -H 'accept: application/json'  | jq > cicd/.json
#	jq . cicd/.json

api-club-post:
# 	curl -v -X POST ${URL}/club -H 'accept: */*'  -d name=TravelClub&intro=TestTravelClub
	curl -v -X POST ${URL}/club -H 'accept: */*'  -H 'Content-Type: application/json'  -d '{"name":"TravelClub", "intro": "Test TravelClub"}'
api-register:
	curl -v -X POST ${URL}/club -H 'accept: */*'  -H 'Content-Type: application/json'  -d '{"name":"JavaTravelClub", "intro": "Travel club to the java island."}'

h2-browse:
	"C:\Program Files\Google\Chrome\Application\chrome.exe"  http://localhost:8080/h2-console  -incognito
	#start chrome http://localhost:8080/h2-console  -incognito